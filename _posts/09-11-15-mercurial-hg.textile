---
layout: post
title: Mercurial Hg
excerpt: <strong>DVCS</strong> (Distributed Version Control System) - это распределенные системы контроля версий, которые в общем случае не нуждаются в централизованном хранилище. Это их главное преимущество перед традиционными системами (CVS, SVN, etc), оно начинает проявляться и выручать при достаточно большой и распределенной команде разработчиков. Это очень удобно когда можно работать без доступа к центральному репозиторию или когда есть возможность делиться своими "экспериментальными" на работками с другими участниками разработки.
published: true
categories:
- dvcs
- hg
- mercurial
image: http://lh6.ggpht.com/_wN3Yn5K_LYs/Sv9RZPG2API/AAAAAAAAACs/I0Qq9icgvCA/Mercurial_logo.png?imgmax=800
---

<strong>DVCS</strong> (Distributed Version Control System) - это распределенные системы контроля версий, которые в общем случае не нуждаются в централизованном хранилище. Это их главное преимущество перед традиционными системами (CVS, SVN, etc), оно начинает проявляться и выручать при достаточно большой и распределенной команде разработчиков. Это очень удобно когда можно работать без доступа к центральному репозиторию или когда есть возможность делиться своими "экспериментальными" на работками с другими участниками разработки. Известные представители этого семейства:

# Darcs;
# BitKeeper;
# Bazaar;
# Git;
# Mercurial.

h4. Mercurial

<center><img src="http://lh6.ggpht.com/_wN3Yn5K_LYs/Sv9RZPG2API/AAAAAAAAACs/I0Qq9icgvCA/Mercurial_logo.png?imgmax=800" alt="Mercurial_logo.png" width="200" height="240" /></center>

<strong>Mercurial</strong> популярная система контроля версий, список использующих в качестве основной системы контроля версий достаточно впечатляющий:

# Mozilla
# OpenOffice.org
# OpenJDK
# Netbeans
# OpenSolaris
# ALSA
# Xen
# Dovecot
# MoinMoin
# XINE
# wmii и dwm
# mutt
# XEmacs
# NTFS-3G
# Adium
# Gajim
# Python
# RabbitMQ

Бесплатные хостинги проектов:

# Google Code
# Assembla.com
# BitBucket.org

Mercurial написан на Python'e, но особо узкие места были переписаны в виде Python-C расширений. Hg умеет работать поверх протоколов HTTP/HTTPS и SSH. Локальный сервер репозитория очень лекго умеет подниматься с помощью команды hg serve в корне локального репозитория (сервер поднимается на порту 8000). Из личного опыта Mercurail очень производителен и легок в обращении, за счет основы в виде Python'a отлично интегрируется во все популярные платформы. Так же имеет кросплатформенный GUI клиент <a href="http://bitbucket.org/tortoisehg/stable/wiki/Home">TortoiseHg</a>, который интегрируется как в Windows, так и в Gnome/Nautilus. 


h4. Основные команды

{% highlight bash %}
hg clone [address]
{% endhighlight %}

Для создания рабочей копии.

{% highlight bash %}
hg pull [address]
{% endhighlight %}

Для скачивания последней ревизии.

{% highlight bash %}
hg add [file]
{% endhighlight %}

Для добавления файла в новый коммит.

{% highlight bash %}
hg push [address]
{% endhighlight %}

Для добавления последних коммитов в удаленный репозиторий.

{% highlight bash %}
hg commit
{% endhighlight %}

Для добавления нового коммита в рабочую копию.

{% highlight bash %}
hg merge
{% endhighlight %}

Для мержа конфликтов.

{% highlight bash %}
hg resolve
{% endhighlight %}

Для возврата к последнему валидному коммиту после не удачного мержа.

{% highlight bash %}
hg up
{% endhighlight %}

Для обновления рабочей копии.

h4. Плагины

Для установки плагинов достаточно записать строку с названием после [extensions] в файл .hgrc (в корне домашней директории).

fetch — выполняет обновление рабочей копии, merge (если нет конфликтов) и commit.

{% highlight bash %}
fetch = 
{% endhighlight %}

purge — отчищает все файлы, которые не были добавлены в рабочую копию (commit)

{% highlight bash %}
purge = 
{% endhighlight %}

color — раскрашивает вывод команд

{% highlight bash %}
color = 
{% endhighlight %}

churn — добавляет не которые метрики по вашему репозиторию.

{% highlight bash %}
churn = 
{% endhighlight %}

Так же надо добавить

{% highlight bash %}
churn = --progress
{% endhighlight %}

в [defaults] секцию

graphlog — дает возможность получить графическое представление лога репозитория

{% highlight bash %}
graphlog = 
{% endhighlight %}

Для работы локального репозитория без ssl не обходимо добавить

{% highlight bash %}
[web]
allow_push = *
push_ssl = false 
{% endhighlight %}

в ~/.hgrc файл.

h4. Пример файла .hgrc

{% highlight bash %}
[auth]
project.prefix = [address]
project.username = [username]
project.password = [password]
project.schemes = http https

[ui]
username = "Anton Panasenko"
style = compact

[defaults]
branches = --active
churn = --progress

[extensions]
churn =
color =
graphlog =
fetch = 
purge = 
pager = 
rebase = 

[pager]
attend = log, glog
{% endhighlight %}